package owl_api_demo;

import MCommon.Global;
import MDataProcessing.Assertion.ConceptAssertion;
import MDataProcessing.Assertion.RoleAssertion;
import MDataProcessing.ConceptProcessing;
import MDataProcessing.Individual.ConceptIndividuals;
import MDataProcessing.Individual.RoleIndividual;
import MDataProcessing.Individual.RoleIndividuals;
import MDataProcessing.RoleProcessing;
import MKnowledge.KnowledgeBase;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.ListModel;
import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntologyFormat;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author tdminh
 */
public class ShowIndividuals extends javax.swing.JDialog {

    /**
     * Creates new form showIndividuals
     */
    public ShowIndividuals(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //Set JDialog into center of monitor
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRoles = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listIndividuals = new javax.swing.JList<>();
        lblIndividuals = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listRoles = new javax.swing.JList<>();
        txtIRI = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listConcepts = new javax.swing.JList<>();
        lblConcepts = new javax.swing.JLabel();
        btChooseFile = new javax.swing.JButton();
        lblRoles1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Show assertions");

        lblRoles.setText("Roles:");

        jScrollPane2.setViewportView(listIndividuals);

        lblIndividuals.setText("Individuals:");

        listRoles.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listRolesValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listRoles);

        txtIRI.setEditable(false);

        listConcepts.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listConceptsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listConcepts);

        lblConcepts.setText("Concepts:");

        btChooseFile.setText("Select File");
        btChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btChooseFileActionPerformed(evt);
            }
        });

        lblRoles1.setText("Base URL:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btChooseFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRoles1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblConcepts, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRoles, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblIndividuals, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(txtIRI))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btChooseFile)
                    .addComponent(txtIRI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRoles1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConcepts)
                    .addComponent(lblRoles)
                    .addComponent(lblIndividuals))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChooseFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {

            File selectedFile = fileChooser.getSelectedFile();

            Global.iriFileInput = IRI.create(selectedFile);
            Global.knowledgeBase = new KnowledgeBase(Global.iriFileInput);

            OWLOntologyFormat format = Global.knowledgeBase.getOntologyManager().getOntologyFormat(Global.knowledgeBase.getOntology());
            txtIRI.setText(format.asPrefixOWLOntologyFormat().getDefaultPrefix());

            ConceptProcessing.createFrequentConceptsForFullVersion(Global.knowledgeBase);
            lblConcepts.setText("Concepts: " + String.valueOf(Global.allFrequentConceptsFull.size()));

            RoleProcessing.createFrequentRolesForFullVersion(Global.knowledgeBase);
            lblRoles.setText("Roles: " + String.valueOf(Global.allFrequentRolesFull.size()));

            DefaultListModel modelConcepts = new DefaultListModel();
            DefaultListModel modelRoles = new DefaultListModel();
            DefaultListModel modelIndividuals = new DefaultListModel();
            listConcepts.setModel(modelConcepts);
            listRoles.setModel(modelRoles);
            listIndividuals.setModel(modelIndividuals);
            modelConcepts.clear();
            modelRoles.clear();
            modelIndividuals.clear();
            for (RoleAssertion roleAssertion : Global.allFrequentRolesFull) {
                modelRoles.addElement(roleAssertion.getRoleName());
            }

            for (ConceptAssertion conceptAssertion : Global.allFrequentConceptsFull) {
                modelConcepts.addElement(conceptAssertion.getConceptName());
            }

        }
    }//GEN-LAST:event_btChooseFileActionPerformed

    private void listConceptsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listConceptsValueChanged
        // TODO add your handling code here:
        ConceptAssertion conceptAssertion = ConceptProcessing.getConceptAssertionFromFrequentConceptsFull(listConcepts.getSelectedValue());

        if (conceptAssertion != null) {
            ConceptIndividuals individuals = conceptAssertion.getIndividuals();
            Set<String> nameOfIndividuals = individuals.getIndividualsName();

            DefaultListModel modelIndividuals = new DefaultListModel();
            listIndividuals.setModel(modelIndividuals);
            modelIndividuals.clear();
            
            for (String strNameIndividual : nameOfIndividuals) {
                modelIndividuals.addElement(strNameIndividual);
            }

            lblIndividuals.setText("Individuals_concept: " + String.valueOf(nameOfIndividuals.size()));
        }else{
            System.out.println("coceptAssertion null");
        }
    }//GEN-LAST:event_listConceptsValueChanged

    private void listRolesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listRolesValueChanged
        // TODO add your handling code here:
        RoleAssertion roleAssertion = RoleProcessing.getRoleAssertionFromFrequentRoles(listRoles.getSelectedValue());
        DefaultListModel modeIndividuals = new DefaultListModel();
        listIndividuals.setModel(modeIndividuals);
        modeIndividuals.clear();
        
        RoleIndividuals rIndividuals = roleAssertion.getIndividuals();
        Set<RoleIndividual> listIndividuals = rIndividuals.getIndividuals();
        for (RoleIndividual temp:listIndividuals){
            modeIndividuals.addElement("("+temp.getDomain()+","+temp.getRange()+")");
        }
        lblIndividuals.setText("Individuals_role: " + listIndividuals.size());
    }//GEN-LAST:event_listRolesValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowIndividuals.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowIndividuals.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowIndividuals.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowIndividuals.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ShowIndividuals dialog = new ShowIndividuals(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btChooseFile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblConcepts;
    private javax.swing.JLabel lblIndividuals;
    private javax.swing.JLabel lblRoles;
    private javax.swing.JLabel lblRoles1;
    private javax.swing.JList<String> listConcepts;
    private javax.swing.JList<String> listIndividuals;
    private javax.swing.JList<String> listRoles;
    private javax.swing.JTextField txtIRI;
    // End of variables declaration//GEN-END:variables
}
